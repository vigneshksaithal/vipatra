<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    
    <script src="https://cdn.jsdelivr.net/npm/vue@2.6.12/dist/vue.min.js" integrity="sha256-KSlsysqp7TXtFo/FHjb1T9b425x3hrvzjMWaJyKbpcI=" crossorigin="anonymous"></script>
    
    <link defer rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" integrity="sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z" crossorigin="anonymous">
    
    <style>     
      .btn{
      font-weight: bold;
      }
      
      [v-cloak] {
        display: none;
      } 
      
      .navbar svg{
      color: currentColor;
      width: 1.3em;
      height: 1.3em;
      margin-right: 15px;
      }           
    </style>
    
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
      <a class="navbar-brand">
      <img src="https://vipatra.in/images/vipatra-logo-small.png" width="30" height="30" class="d-inline-block align-top" alt="vipatra_logo" loading="lazy">Vipatra</a>
        
      <button class="navbar-toggler btn btn-dark" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav">
          <li class="nav-item">
            <a class="nav-link" href="/store/new-bill">
              <i data-feather="plus"></i>
               New Bill
            </a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/store/items">
              <i data-feather="align-justify"></i>
              Inventory
            </a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/store/reports">
              <i fill="currentColor" data-feather="bar-chart"></i>
              Reports
            </a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/store/account">
              <i data-feather="user"></i>
              Account
            </a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/store/help">
              <i data-feather="help-circle"></i>
              Help
            </a>
          </li>
        </ul>
      </div>
    </nav>
   
  </head>
  
  <body>
  
    <!-- START -->
    <script src="https://www.gstatic.com/firebasejs/7.19.1/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/7.19.1/firebase-auth.js"></script>
    <script src="https://www.gstatic.com/firebasejs/7.19.1/firebase-firestore.js"></script>
    <script src="https://www.gstatic.com/firebasejs/7.19.1/firebase-analytics.js"></script>
    <script src="/firebase/prod.js"></script>
    
    <!--  END Firebase initial -->
    <section v-cloak id="body">
    
      <h4 class="text-center my-3">Sales Reports</h4>
    
    <div class="container">
      <div v-show="showAlert" class="alert alert-warning" role="alert">Please select From and To date to see reports</div>
      <br>
      
      <h6>Date Range</h6>
      
      <div class="row">
        <div class="col">
          <label>From</label>
          <input v-model="fromDate" type="date" class="form-control">
        </div>
        <div class="col">
          <label>To</label>
          <input v-model="toDate" type="date" class="form-control">
        </div>
      </div>
      <div class="text-right">
        <button v-on:click.prevent="get_sales_data" class="btn btn-primary my-4">Apply</button>
      </div>
      
      <section v-show="showData" class="container">
      
        <h6>SALES SUMMARY: OVERVIEW</h6>
        <br><br>
        <div class="row">
          <div class="col">
            <h3>₹ {{ totalSales }}</h3>
          </div>
          <div class="col">
            <h3>{{ noOfSales }}</h3>
          </div>
        </div>
        <div class="row">
          <div class="col">
            <span>Total Sales</span>
          </div>
          <div class="col">
            <span>No. of Sales</span>
          </div>
        </div>
        <br>
        <hr>
        <div class="row">
          <div class="col">
            <h3>₹ {{ totalMargin }}</h3>
          </div>
          <div class="col">
            <h3>₹ {{ (totalSales / noOfSales).toFixed(2) }}</h3>
          </div>
        </div>
        <div class="row" >
          <div class="col">
            <span>Profit</span>
          </div>
          <div class="col">
            <span>Avg. sale</span>
          </div>
        </div>
        <br>
        <hr>
        <div class="row">
          <div class="col">
            <div class="card">
              <div class="card-body">
                <h6>TOTAL SALES: CHART</h6>
                <br><br>
                <canvas id="sales-chart"></canvas>
              </div>
            </div>
          </div>
        </div>
    
      </section>
      
    </section>
    
    <script>
    
      var app = new Vue({
        el: '#body',
        data() {
          return {
            userId: '',
            showData: false,
            fromDate: '',
            toDate: '',
            totalSales: 0,
            noOfSales: 0,
            totalMargin: 0,
            salesArr: [],
            labelsArr: [],
            showAlert: false   
          }              
        },
        methods: {
        
          get_sales_data() {
            this.is_date_null()
            this.totalSales = 0
            this.noOfSales = 0
            this.totalMargin = 0
            this.salesArr = []
            this.labelsArr = []
            
            let tempFromDate = new Date (this.fromDate)
            let tempToDate = new Date (this.toDate)
            
            db.collection('biz')
            .doc(this.userId)
            .collection('sales')
            .where('date', '>=' , tempFromDate)
            .where('date', '<=', tempToDate)
            .orderBy('date', 'desc')
            .get()
            .then((snapshot) => {
              snapshot.forEach((doc) => {
                let val = doc.data().sales
                this.totalSales += parseFloat(val.total)
                this.totalMargin += parseFloat(val.margin)
                this.noOfSales += parseFloat(val.number)
                this.salesArr.push(val.sales)     
                console.log(this.salesArr)                                        
                       
               let date = doc.data().date  
               date = date.toDate()
               let chart_date = this.timestamp_to_date(date)
               this.labelsArr.push(chart_date)          
             }) 
           }).then(() => {
             console.log(this.salesArr)
             this.show_chart()
           })
       },
       
       is_date_null() {
         if (this.fromDate == '' || this.toDate == '') {
           this.showAlert = true
           this.showData = false
         }
         else {
           this.showAlert = false
           this.showData = true
         }           
       },
       
       timestamp_to_date(timestamp) {
         let date = new Date(timestamp)       
         let dd = String(date.getDate()).padStart(2, '0')
         let mm = String(date.getMonth() + 1).padStart(2, '0') /*January is 0!*/
         let yyyy = date.getFullYear();
      
         date = yyyy + '-' + mm + '-' + dd
         date = dd
         return date
       },
      
       get_user_id() {
        auth.onAuthStateChanged((user) => {          
          if (user) {
            this.userId = (user.uid)           
          }
          else {
            document.write('Please Login')
            setTimeout(() => {
              window.location.href = '/store/login'
            }, 1000)
          }          
        })
      },
      
      show_chart() {
        var ctx = document.getElementById('sales-chart').getContext('2d')
        var chart = new Chart(ctx, {
           type: 'bar',
           data: {
           labels: app.labelsArr,
           datasets: [{
             label: 'Sales',
             backgroundColor: 'rgb(255, 99, 132)',
             borderColor: 'rgb(255, 99, 132)',
             data: this.salesArr
           }]
         },
         options: {
           scales: {
             xAxes: [{
               gridLines: {
                 color: "rgba(0, 0, 0, 0)",
               }
             }]
           }
         }
       })
      }
      
                
      }             
      })
                 
      document.addEventListener('DOMContentLoaded', () => {
        app.get_user_id()
        feather.replace()
      })
      
    </script>
    
    <!-- jQuery, popper.js, bootstrap, chartjs -->
    <script defer src="https://cdn.jsdelivr.net/combine/npm/jquery@3.5.1,npm/popper.js@1.16.1,npm/bootstrap@4.5.2,npm/chart.js@2.9.3"></script>
    
    <!-- feather icons -->
    <script defer src="https://cdn.jsdelivr.net/npm/feather-icons@4.28.0/dist/feather.min.js" integrity="sha256-XfzdiC+S1keia+s9l07y7ye5a874sBq67zK4u7LTjvk=" crossorigin="anonymous"></script>
     
  </body>
</html>
