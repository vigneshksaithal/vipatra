<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>New bill</title>
    <script src="https://cdn.jsdelivr.net/npm/vue@2.6.12"></script>
    <!-- bootstrap CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css" integrity="sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/gh/vigneshksaithal/autocomplete@main/index.js"></script>
    <link rel="manifest" href="/manifest.json">
    <style>
      tbody tr:hover {
      background-color: #5cb85c;
      color: white;
      }
      #bill-storename {
      text-transform: uppercase;
      }
      .btn{
      font-weight: bold;
      }
      [v-cloak] {
      display: none;
      }
      * { box-sizing: border-box; }
      body {
      font: 16px Arial;
      }
      .autocomplete {
      position: relative;
      display: inline-block;
      }
      .autocomplete-items {
      position: absolute;
      border: 1px solid #d4d4d4;
      border-bottom: none;
      border-top: none;
      z-index: 99;
      top: 100%;
      left: 0;
      right: 0;
      }
      .autocomplete-items div {
      padding: 10px;
      cursor: pointer;
      background-color: #fff;
      border-bottom: 1px solid #d4d4d4;
      }
      .autocomplete-items div:hover {
      background-color: #e9e9e9;
      }
      .autocomplete-active {
      background-color: DodgerBlue !important;
      color: #ffffff;
      }
    </style>
    <!-- START -->
    <script src="https://www.gstatic.com/firebasejs/7.19.1/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/7.19.1/firebase-auth.js"></script>
    <script src="https://www.gstatic.com/firebasejs/7.19.1/firebase-firestore.js"></script>
    <script src="https://www.gstatic.com/firebasejs/7.6.1/firebase-analytics.js"></script>
    <script defer src="https://www.gstatic.com/firebasejs/7.6.1/firebase-performance.js"></script>
    <script src="/firebase/prod.js"></script>
    <!--  END Firebase initial -->
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
      <a class="navbar-brand">
      <img src="https://vipatra.in/images/vipatra-logo-small.png" width="30" height="30" class="d-inline-block align-top" alt="vipatra_logo" loading="lazy">Vipatra</a>
      <button class="navbar-toggler btn btn-dark" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav">
          <li class="nav-item">
            <a class="nav-link" href="/store/new-bill">
              <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-plus-square-fill" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                <path fill-rule="evenodd" d="M2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2zm6.5 4a.5.5 0 0 0-1 0v3.5H4a.5.5 0 0 0 0 1h3.5V12a.5.5 0 0 0 1 0V8.5H12a.5.5 0 0 0 0-1H8.5V4z"/>
              </svg>
              &nbsp; New Bill
            </a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/store/items">
              <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-box-seam" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                <path fill-rule="evenodd" d="M8.186 1.113a.5.5 0 0 0-.372 0L1.846 3.5l2.404.961L10.404 2l-2.218-.887zm3.564 1.426L5.596 5 8 5.961 14.154 3.5l-2.404-.961zm3.25 1.7l-6.5 2.6v7.922l6.5-2.6V4.24zM7.5 14.762V6.838L1 4.239v7.923l6.5 2.6zM7.443.184a1.5 1.5 0 0 1 1.114 0l7.129 2.852A.5.5 0 0 1 16 3.5v8.662a1 1 0 0 1-.629.928l-7.185 2.874a.5.5 0 0 1-.372 0L.63 13.09a1 1 0 0 1-.63-.928V3.5a.5.5 0 0 1 .314-.464L7.443.184z"/>
              </svg>
              &nbsp; Inventory
            </a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/store/reports">
              <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-bar-chart-fill" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                <rect width="4" height="5" x="1" y="10" rx="1"/>
                <rect width="4" height="9" x="6" y="6" rx="1"/>
                <rect width="4" height="14" x="11" y="1" rx="1"/>
              </svg>
              &nbsp; Reports
            </a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/store/account">
              <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-person-circle" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                <path d="M13.468 12.37C12.758 11.226 11.195 10 8 10s-4.757 1.225-5.468 2.37A6.987 6.987 0 0 0 8 15a6.987 6.987 0 0 0 5.468-2.63z"/>
                <path fill-rule="evenodd" d="M8 9a3 3 0 1 0 0-6 3 3 0 0 0 0 6z"/>
                <path fill-rule="evenodd" d="M8 1a7 7 0 1 0 0 14A7 7 0 0 0 8 1zM0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8z"/>
              </svg>
              &nbsp; Account
            </a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/store/help">
              <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-info-circle-fill" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                <path fill-rule="evenodd" d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412l-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM8 5.5a1 1 0 1 0 0-2 1 1 0 0 0 0 2z"/>
              </svg>
              &nbsp; Help
            </a>
          </li>
        </ul>
      </div>
    </nav>
  </head>
  <body>
    <section v-cloak id="body">
      <div class="container">
        <br>
        <div class="row align-bottom">
          <div class="col-3">
            <button class="btn btn-link btn-lg" data-toggle="modal" data-target="#edit-modal">Edit</button>            
          </div>
          <div class="col-9">        
            <button class="btn btn-primary btn-lg btn-block" data-toggle="modal" data-target="#send-bill-modal">Charge â‚¹ {{ totalAmount }}</button>    
          </div>
        </div>
        <br>
        <div class="row">
          <div class="col-7">
            <div class="form-group">
              <label>Customer name</label>
              <input type="text" v-model="customerName" class="form-control"/>
            </div>
          </div>
          <div class="col-5">
            <div class="form-group">
              <label>Bill No.</label>
              <input type="number" v-model.number="billNo" class="form-control"/>
            </div>
          </div>
        </div>
        <div class="row">
          <div class="col-7">
            <div class="form-group">
              <div class="autocomplete">
                <label>Item</label>
                <input id="search-bar" type="text" class="form-control" placeholder="Search item..." v-model.lazy="item">
              </div>
            </div>
          </div>
          <div class="col-5">
            <div class="form-group">
              <label>Quantity</label>
              <input v-model.number="qty" type="number" class="form-control" placeholder="Qty">
            </div>
          </div>
        </div>
        <div class="text-left">Price</div>
        <div class="row my-2">
          <div class="col-5">
            <div class="form-group">
              <input v-model.number="price" type="number" class="form-control">
            </div>
          </div>
          <div class="col-2">
            <button class="btn btn-danger" @click="reset">Reset</button>
          </div>
          <div class="col-5 text-right">
            <button @click="add_item" class="btn btn-secondary">Add Item</button>
          </div>
        </div>
        <div v-show="false" class="d-none">
          <input v-model.number="margin">
        </div>
        <div class="row">
          <div class="col">
            <table id="table-bill" class="table">
              <thead>
                <tr>
                  <th>Item</th>
                  <th>Qty</th>
                  <th>Price</th>
                  <th>Amount</th>
                </tr>
              </thead>
              <tbody>
                <tr v-for="item in billItemsList" :key="item.item">
                  <td>{{ item.item }}</td>
                  <td>{{ item.qty }}</td>
                  <td>{{ item.price }}</td>
                  <td>{{ item.total }}</td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
      <br><br><br><br>
      <!--Submit modal-->
      <div id="send-bill-modal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="submit-modal" aria-hidden="true">
        <div class="modal-dialog" role="document">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title">Send Bill</h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">&times;</span>
              </button>
            </div>
            <div class="modal-body">
              <div>
                <fieldset v-bind:disabled="sendBillDisabled">
                  <span>Send Digital bill</span>
                  <br>
                  <div class="form-row my-2">
                    <div class="col-8">
                      <input type="text" class="form-control" placeholder="customer code">
                    </div>
                    <div class="col-4">
                      <button @click="save_bill('NO')" type="button" class="btn btn-primary">Send bill</button>
                    </div>
                  </div>
                  <div class="text-center">
                    <div class="h5 m-3">OR</div>
                    <button @click="save_bill('YES')" class="btn btn-danger btn-block">Get PDF</button>
                  </div>
              </div>
              </fieldset>
              <div v-if="sendBillDisabled" class="text-center">
                <div class="alert alert-success mt-4">
                  <div v-show="showSpinner" class="spinner-border" role="status">  
                    <span class="sr-only">Loading...</span>
                  </div>
                  <div class="mt-3">{{ sendBillAlertText }}</div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <!-- edit Modal -->
      <div class="modal fade" id="edit-modal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title">Edit Bill</h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">&times;</span>
              </button>
            </div>
            <div class="modal-body">
              <div class="alert alert-secondary" role="alert">Date is set to Todays date automatically. But if you want custom date choose below.</div>
              <div class="form-group">
                <label>Date</label>
                <input v-model="billDate" type="date" class="form-control">
              </div>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-primary" data-dismiss="modal">Save</button>
            </div>
          </div>
        </div>
      </div>
      <!--END submit modal-->
      <!-- Modal -->    
      <div class="modal fade" id="view-bill-modal" tabindex="-1" aria-labelledby="bill-modal" aria-hidden="true">
        <div class="modal-dialog">
          <div class="modal-content">
            <div class="modal-header">
              <h5 class="modal-title text-center">Bill</h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
              <span aria-hidden="true">&times;</span>
              </button>
            </div>
            <div id="bill-pdf" class="modal-body">
              <br>
              <div class="container">
                <div class="row text-center">
                  <div class="col">
                    <h6>TAX INVOICE</h6>
                    <h4>{{ bizInfo.name }}</h4>
                    <div v-if="bizInfo.address != ''">Address: {{ bizInfo.address }}</div>
                    <div v-if="bizInfo.phone != ''">Phone: {{ bizInfo.phone }}</div>
                    <div v-if="bizInfo.gstIN != ''">GSTIN: {{ bizInfo.gstIN }}</div>
                    <br>
                    <span>Total</span>
                    <h2 class="text-success">â‚¹ {{ totalAmount }}</h2>
                  </div>
                </div>
                <br>
                <div class="row">
                  <div class="col">
                    <span>Date: {{ billDate }}</span>
                    <br>
                    <span v-if="customerName != ''">Customer Name: {{ customerName }}</span>
                  </div>
                  <div class="col">
                    <span v-if="invoiceNum != ''">Invoice No: {{ invoiceNum }}</span>
                    <br>
                    <span>Bill ID: {{ billId }}</span>
                  </div>
                </div>
              </div>
              <br>
              <table class="table">
                <thead>
                  <tr>
                    <th>Item</th>
                    <th>Qty</th>
                    <th>Price</th>
                    <th>Amount</th>
                  </tr>
                </thead>
                <tbody>
                  <tr v-for="item in billItemsList" :key="item.item">
                    <td>{{ item.item }}</td>
                    <td>{{ item.qty }}</td>
                    <td>{{ item.price }}</td>
                    <td>{{ item.total }}</td>
                  </tr>
                </tbody>
              </table>
              <br>
              <div class="text-center">
                <span class="h5">Total Amount = {{ totalAmount }}</span>
              </div>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
          </div>
        </div>
      </div>
    </section>
    <script>                                                     
      var app = new Vue({
        el: '#body',
        data() {
          return {
            userId: '',
            showItemsTable: false,
            bizInfo: {
              name: '',
              address: '',
              phone: '',
              gstIN: ''
            },
            item: '',
            qty: '',
            price: '',
            arr: [],
            invoiceNum: '',
            totalAmount: 0,
            totalMargin: 0,
            margin: 0,
            billDate: '',
            billNo: '',
            billId: '',
            itemsList: [],
            billItemsList: [],
            searchBar: '',
            customerName: '',
            sendBillDisabled: false,
            itemsArr: [],
            sendBillAlertText: '',
            showSpinner: false,
            json: []                       
          }            
        },
        methods: {
          
          get_user_id(){
            auth.onAuthStateChanged((user) => {
              if (user) {
                this.userId = (user.uid);
                this.get_items();
                this.get_store_details();
              }
              else {
                document.write('Please Login')
                setTimeout(() => {
                window.location.href = '/store/login' 
                }, 1000)
              }
            })
          },
          
          get_items() {
            db.collection('biz')
            .doc(this.userId)
            .collection('items')
            .orderBy('itemInfo.item', 'asc')
            .get()
            .then((querySnapshot) => {
                querySnapshot.docs.forEach((doc) => {
              let val = doc.data().itemInfo;
              this.arr.push(val.item);
              this.itemsList.push({
                item: val.item,
                price: val.salePrice,
                margin: (val.salePrice - val.costPrice),
                docId: doc.id                  
              })         
            })
          })
        },
                            
        get_store_details() {
          db.collection('biz')
          .doc(this.userId)
          .get()
          .then((doc) => {
            let val = doc.data().bizInfo
            this.bizInfo.name = val.name
            this.bizInfo.address = val.address
            this.bizInfo.phone = val.phone
            this.bizInfo.gstIN = val.gstIN
            this.billNo = (doc.data().billInfo.prevBillNo + 1)
          })        
        },
         
        add_item() {
          this.billItemsList.push({
            item: this.item,
            qty: this.qty,
            price: this.price,
            total: (this.qty * this.price),
            docId: this.docId
          })
          this.totalAmount += (this.qty * this.price)
          this.totalMargin += this.margin
          console.log(this.totalMargin)
          this.item = ''
          this.qty = ''
          this.price = ''
          let i = 0
        },      
         
        get_data() {            
          let n = this.itemsList.length;
          for (let i = 0; i < n; i++) {
            if (this.item == this.itemsList[i].item) {
              this.price = this.itemsList[i].price;
              this.margin = this.itemsList[i].margin;
              this.docId = this.itemsList[i].docId;              
              break;
            }
            else {
              this.price = ''
            }
          }
        }, 
        
        get_bill_no() {
          if (this.prevBillNo == '') {
            return false;
          } 
          else {
            db.collection('biz') 
            .doc(this.userId) 
            .get()
            .then((doc) => {
              this.billNo = (doc.data().billInfo.prevBillNo + 1)
            })
          }    
        },
                      
         html2json() {
           this.json = [];
           let n = this.billItemsList.length;
           for (let i = 0; i < n; i++) {
             this.json.push({
               item: this.billItemsList[i].item,
               qty: this.billItemsList[i].qty,
               price: this.billItemsList[i].price,
               total: this.billItemsList[i].total
             })
           } 
           
         },
         
         save_sales() {
           let sales = parseFloat(this.totalAmount);
           let margin = parseFloat(this.totalMargin);
           db.collection('biz')
           .doc(this.userId)
           .collection('sales')
           .doc(this.billDate)
           .set({
             date: firebase.firestore.Timestamp.fromDate(new Date(this.billDate)),
             salesInfo: {
             sales: firebase.firestore.FieldValue.increment((sales)),
             margin: firebase.firestore.FieldValue.increment(margin),
             noOfSales: firebase.firestore.FieldValue.increment(1)
           },
           bizId: this.userId
         },{merge: true}).then(() => {
         })        
       },
                            
         save_bill(wantPdf) {
           app.html2json();
           app.is_date_null();
           let cus_code = this.customerCode;
           this.sendBillDisabled = true;
           this.showSpinner = true;
           this.sendBillAlertText = 'Saving bill...';       
           db.collection('bills')
           .add({
             bizId: this.userId,
             bizInfo: { 
               name: this.bizInfo.name,
               address: this.bizInfo.address,
               phone: this.bizInfo.phone                                   
             },
             totalAmount: this.totalAmount,
             date: firebase.firestore.Timestamp.fromDate(new Date(this.billDate)),
             items: this.json
           }).then(async function(doc) { 
             if (wantPdf == 'YES') {
               var element = document.getElementById('bill-pdf');
               await html2pdf(element);
             }      
             app.update_stock();
             app.update_bill_no();
             this.billId = doc.id;         
             app.save_sales();
           }).then(() => {
             app.reset();
             this.showSpinner = false;
             this.sendBillAlertText = 'Bill Saved successfully!';
             setTimeout(() => {
               this.sendBillAlertText = '';
               $('#send-bill-modal').modal('hide');
               this.sendBillDisabled = false;
             }, 1200);
           });     
         },
          
          is_date_null() {
            if (this.billDate == '') {
              this.billDate = this.todays_date();
            }
          },
         
          todays_date() {
            let date = new Date();
            let dd = String(date.getDate()).padStart(2, '0');
            let mm = String(date.getMonth() + 1).padStart(2, '0'); //January is 0!
            let yyyy = date.getFullYear();
      
            date = yyyy + '-' + mm + '-' + dd;
            return date;
          },          
                   
          update_stock() {
            let n= this.billItemsList.length;
            for (let i = 0; i < n; i++) {
              let docId = this.billItemsList[i].docId;
              let qty = -Math.abs(this.billItemsList[i].qty);
              if (docId) {
                db.collection('biz')
                .doc(this.userId)
                .collection('items')
                .doc(docId)
                .update({
                  'itemInfo.stock': firebase.firestore.FieldValue.increment(qty)
                });                   
              } 
            }
          },
          
          update_bill_no() {
            db.collection('biz')  
            .doc(this.userId) 
            .update({
              'billInfo.prevBillNo': this.billNo  
            })
            this.billNo = (this.billNo + 1)
          },
                              
          reset() {
            this.billItemsList = [];
            this.item = '';
            this.customerName = '';
            this.billDate = '';
            this.totalAmount = 0;
            this.totalMargin = 0;
            this.search = '';
            this.price = '';
            this.qty = '';
          }                                 
      
      },
       
      watch: {
       item: function item_watch() {
         this.get_data()
       }
      }
      
      })      
      
      app.get_user_id();    
      autocomplete(document.getElementById('search-bar'), app.arr);
        
    </script>
    <!-- jQuery & JS bundle w/ Popper.js -->
    <script defer src="https://code.jquery.com/jquery-3.5.1.slim.min.js" integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous"></script>
    <script defer src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ho+j7jyWK8fNQe+A12Hb8AhRq26LrZ/JpcUGGOn+Y7RsweNrtN/tE3MoK7ZeZDyx" crossorigin="anonymous"></script>
    <script defer src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.9.2/html2pdf.bundle.min.js" integrity="sha512-pdCVFUWsxl1A4g0uV6fyJ3nrnTGeWnZN2Tl/56j45UvZ1OMdm9CIbctuIHj+yBIRTUUyv6I9+OivXj4i0LPEYA==" crossorigin="anonymous"></script>  
  </body>
</html>
